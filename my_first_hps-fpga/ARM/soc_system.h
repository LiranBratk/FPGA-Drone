#ifndef _ALTERA_SOC_SYSTEM_H_
#define _ALTERA_SOC_SYSTEM_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file 'soc_system.sopcinfo'.
 */

/*
 * This file contains macros for all modules with masters in the system and
 * all the devices connected to those masters.
 * Macro names have unique prefixes to prevent duplicate names.
 */

/*
 * Macros for module 'MemoryDMA', class 'altera_avalon_sgdma'.
 * The macros are prefixed with 'MEMORYDMA_'.
 * The prefix comes from the module name.
 */
#define MEMORYDMA_COMPONENT_TYPE altera_avalon_sgdma
#define MEMORYDMA_COMPONENT_NAME MemoryDMA
#define MEMORYDMA_ADDRESS_WIDTH 32
#define MEMORYDMA_ALWAYS_DO_MAX_BURST 1
#define MEMORYDMA_ATLANTIC_CHANNEL_DATA_WIDTH 4
#define MEMORYDMA_AVALON_MM_BYTE_REORDER_MODE 0
#define MEMORYDMA_BURST_DATA_WIDTH 8
#define MEMORYDMA_BURST_TRANSFER 0
#define MEMORYDMA_BYTES_TO_TRANSFER_DATA_WIDTH 16
#define MEMORYDMA_CHAIN_WRITEBACK_DATA_WIDTH 32
#define MEMORYDMA_COMMAND_FIFO_DATA_WIDTH 104
#define MEMORYDMA_CONTROL_DATA_WIDTH 8
#define MEMORYDMA_CONTROL_SLAVE_ADDRESS_WIDTH 4
#define MEMORYDMA_CONTROL_SLAVE_DATA_WIDTH 32
#define MEMORYDMA_DESCRIPTOR_READ_BURST 0
#define MEMORYDMA_DESC_DATA_WIDTH 32
#define MEMORYDMA_HAS_READ_BLOCK 1
#define MEMORYDMA_HAS_WRITE_BLOCK 1
#define MEMORYDMA_IN_ERROR_WIDTH 0
#define MEMORYDMA_OUT_ERROR_WIDTH 0
#define MEMORYDMA_READ_BLOCK_DATA_WIDTH 32
#define MEMORYDMA_READ_BURSTCOUNT_WIDTH 4
#define MEMORYDMA_STATUS_TOKEN_DATA_WIDTH 24
#define MEMORYDMA_STREAM_DATA_WIDTH 32
#define MEMORYDMA_UNALIGNED_TRANSFER 0
#define MEMORYDMA_WRITE_BLOCK_DATA_WIDTH 32
#define MEMORYDMA_WRITE_BURSTCOUNT_WIDTH 4

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_SDRAM_BASE 0x0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_SDRAM_END 0x7fffffff
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_SDRAM_WRITABLE 1
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GMAC0_BASE 0xff700000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GMAC0_SPAN 8192
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GMAC1_BASE 0xff702000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GMAC1_SPAN 8192
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SDMMC_BASE 0xff704000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SDMMC_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_QSPI_BASE 0xff705000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_QSPI_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_FPGAMGR_BASE 0xff706000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_FPGAMGR_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO0_BASE 0xff708000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO0_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO1_BASE 0xff709000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO1_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO2_BASE 0xff70a000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO2_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_L3REGS_BASE 0xff800000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_L3REGS_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_NAND0_BASE 0xff900000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_NAND0_SPAN 65536
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_USB0_COMPONENT_TYPE usb
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_USB0_BASE 0xffb00000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_USB0_SPAN 262144
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_USB1_COMPONENT_TYPE usb
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_USB1_BASE 0xffb40000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_USB1_SPAN 262144
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_DCAN0_BASE 0xffc00000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_DCAN0_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_DCAN1_BASE 0xffc01000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_DCAN1_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART0_BASE 0xffc02000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART0_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART0_END 0xffc020ff
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART0_FIFO_DEPTH 128
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART0_FIFO_HWFC 0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART0_FIFO_MODE 1
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART0_FIFO_SWFC 0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART1_BASE 0xffc03000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART1_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART1_END 0xffc030ff
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART1_FIFO_DEPTH 128
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART1_FIFO_HWFC 0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART1_FIFO_MODE 1
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART1_FIFO_SWFC 0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C0_BASE 0xffc04000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C0_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C1_BASE 0xffc05000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C1_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C2_BASE 0xffc06000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C2_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C3_BASE 0xffc07000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C3_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER0_BASE 0xffc08000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER0_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER1_BASE 0xffc09000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER1_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SDRCTL_BASE 0xffc25000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SDRCTL_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER2_BASE 0xffd00000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER2_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER3_BASE 0xffd01000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER3_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_CLKMGR_BASE 0xffd04000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_CLKMGR_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_RSTMGR_BASE 0xffd05000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_RSTMGR_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SYSMGR_BASE 0xffd08000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SYSMGR_SPAN 1024
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_DMA_BASE 0xffe01000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_DMA_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SPIM0_COMPONENT_TYPE spi
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SPIM0_BASE 0xfff00000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SPIM0_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SPIM1_COMPONENT_TYPE spi
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SPIM1_BASE 0xfff01000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SPIM1_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER_BASE 0xfffec600
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER_SPAN 256
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_ARM_GIC_0_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_L2_BASE 0xfffef000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_L2_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'MemoryDMA_descriptor_read'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_OCRAM_SPAN 65536
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_OCRAM_END 0xffffffff
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_OCRAM_WRITABLE 1
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define MEMORYDMA_DESCRIPTOR_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_SDRAM_BASE 0x0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_SDRAM_END 0x7fffffff
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_SDRAM_WRITABLE 1
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GMAC0_BASE 0xff700000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GMAC0_SPAN 8192
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GMAC1_BASE 0xff702000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GMAC1_SPAN 8192
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SDMMC_BASE 0xff704000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SDMMC_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_QSPI_BASE 0xff705000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_QSPI_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_FPGAMGR_BASE 0xff706000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_FPGAMGR_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO0_BASE 0xff708000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO0_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO1_BASE 0xff709000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO1_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO2_BASE 0xff70a000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO2_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_L3REGS_BASE 0xff800000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_L3REGS_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_NAND0_BASE 0xff900000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_NAND0_SPAN 65536
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_USB0_COMPONENT_TYPE usb
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_USB0_BASE 0xffb00000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_USB0_SPAN 262144
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_USB1_COMPONENT_TYPE usb
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_USB1_BASE 0xffb40000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_USB1_SPAN 262144
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DCAN0_BASE 0xffc00000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DCAN0_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DCAN1_BASE 0xffc01000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DCAN1_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART0_BASE 0xffc02000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART0_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART0_END 0xffc020ff
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART0_FIFO_DEPTH 128
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART0_FIFO_HWFC 0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART0_FIFO_MODE 1
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART0_FIFO_SWFC 0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART1_BASE 0xffc03000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART1_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART1_END 0xffc030ff
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART1_FIFO_DEPTH 128
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART1_FIFO_HWFC 0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART1_FIFO_MODE 1
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART1_FIFO_SWFC 0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C0_BASE 0xffc04000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C0_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C1_BASE 0xffc05000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C1_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C2_BASE 0xffc06000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C2_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C3_BASE 0xffc07000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C3_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER0_BASE 0xffc08000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER0_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER1_BASE 0xffc09000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER1_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SDRCTL_BASE 0xffc25000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SDRCTL_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER2_BASE 0xffd00000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER2_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER3_BASE 0xffd01000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER3_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_CLKMGR_BASE 0xffd04000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_CLKMGR_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_RSTMGR_BASE 0xffd05000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_RSTMGR_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SYSMGR_BASE 0xffd08000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SYSMGR_SPAN 1024
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DMA_BASE 0xffe01000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DMA_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SPIM0_COMPONENT_TYPE spi
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SPIM0_BASE 0xfff00000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SPIM0_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SPIM1_COMPONENT_TYPE spi
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SPIM1_BASE 0xfff01000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SPIM1_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER_BASE 0xfffec600
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER_SPAN 256
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_ARM_GIC_0_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_L2_BASE 0xfffef000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_L2_SPAN 4096
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'MemoryDMA_descriptor_write'.
 * The macros are prefixed with 'MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_OCRAM_SPAN 65536
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_OCRAM_END 0xffffffff
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_OCRAM_WRITABLE 1
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define MEMORYDMA_DESCRIPTOR_WRITE_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_BASE 0x0
#define MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_END 0x7fffffff
#define MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_WRITABLE 1
#define MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define MEMORYDMA_M_READ_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define MEMORYDMA_M_READ_HPS_0_GMAC0_BASE 0xff700000
#define MEMORYDMA_M_READ_HPS_0_GMAC0_SPAN 8192
#define MEMORYDMA_M_READ_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define MEMORYDMA_M_READ_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define MEMORYDMA_M_READ_HPS_0_GMAC1_BASE 0xff702000
#define MEMORYDMA_M_READ_HPS_0_GMAC1_SPAN 8192
#define MEMORYDMA_M_READ_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define MEMORYDMA_M_READ_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define MEMORYDMA_M_READ_HPS_0_SDMMC_BASE 0xff704000
#define MEMORYDMA_M_READ_HPS_0_SDMMC_SPAN 4096
#define MEMORYDMA_M_READ_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define MEMORYDMA_M_READ_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define MEMORYDMA_M_READ_HPS_0_QSPI_BASE 0xff705000
#define MEMORYDMA_M_READ_HPS_0_QSPI_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define MEMORYDMA_M_READ_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define MEMORYDMA_M_READ_HPS_0_FPGAMGR_BASE 0xff706000
#define MEMORYDMA_M_READ_HPS_0_FPGAMGR_SPAN 4096
#define MEMORYDMA_M_READ_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define MEMORYDMA_M_READ_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define MEMORYDMA_M_READ_HPS_0_GPIO0_BASE 0xff708000
#define MEMORYDMA_M_READ_HPS_0_GPIO0_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define MEMORYDMA_M_READ_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define MEMORYDMA_M_READ_HPS_0_GPIO1_BASE 0xff709000
#define MEMORYDMA_M_READ_HPS_0_GPIO1_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define MEMORYDMA_M_READ_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define MEMORYDMA_M_READ_HPS_0_GPIO2_BASE 0xff70a000
#define MEMORYDMA_M_READ_HPS_0_GPIO2_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define MEMORYDMA_M_READ_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define MEMORYDMA_M_READ_HPS_0_L3REGS_BASE 0xff800000
#define MEMORYDMA_M_READ_HPS_0_L3REGS_SPAN 4096
#define MEMORYDMA_M_READ_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define MEMORYDMA_M_READ_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define MEMORYDMA_M_READ_HPS_0_NAND0_BASE 0xff900000
#define MEMORYDMA_M_READ_HPS_0_NAND0_SPAN 65536
#define MEMORYDMA_M_READ_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_USB0_COMPONENT_TYPE usb
#define MEMORYDMA_M_READ_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define MEMORYDMA_M_READ_HPS_0_USB0_BASE 0xffb00000
#define MEMORYDMA_M_READ_HPS_0_USB0_SPAN 262144
#define MEMORYDMA_M_READ_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_USB1_COMPONENT_TYPE usb
#define MEMORYDMA_M_READ_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define MEMORYDMA_M_READ_HPS_0_USB1_BASE 0xffb40000
#define MEMORYDMA_M_READ_HPS_0_USB1_SPAN 262144
#define MEMORYDMA_M_READ_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define MEMORYDMA_M_READ_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define MEMORYDMA_M_READ_HPS_0_DCAN0_BASE 0xffc00000
#define MEMORYDMA_M_READ_HPS_0_DCAN0_SPAN 4096
#define MEMORYDMA_M_READ_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define MEMORYDMA_M_READ_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define MEMORYDMA_M_READ_HPS_0_DCAN1_BASE 0xffc01000
#define MEMORYDMA_M_READ_HPS_0_DCAN1_SPAN 4096
#define MEMORYDMA_M_READ_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define MEMORYDMA_M_READ_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define MEMORYDMA_M_READ_HPS_0_UART0_BASE 0xffc02000
#define MEMORYDMA_M_READ_HPS_0_UART0_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_UART0_END 0xffc020ff
#define MEMORYDMA_M_READ_HPS_0_UART0_FIFO_DEPTH 128
#define MEMORYDMA_M_READ_HPS_0_UART0_FIFO_HWFC 0
#define MEMORYDMA_M_READ_HPS_0_UART0_FIFO_MODE 1
#define MEMORYDMA_M_READ_HPS_0_UART0_FIFO_SWFC 0
#define MEMORYDMA_M_READ_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define MEMORYDMA_M_READ_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define MEMORYDMA_M_READ_HPS_0_UART1_BASE 0xffc03000
#define MEMORYDMA_M_READ_HPS_0_UART1_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_UART1_END 0xffc030ff
#define MEMORYDMA_M_READ_HPS_0_UART1_FIFO_DEPTH 128
#define MEMORYDMA_M_READ_HPS_0_UART1_FIFO_HWFC 0
#define MEMORYDMA_M_READ_HPS_0_UART1_FIFO_MODE 1
#define MEMORYDMA_M_READ_HPS_0_UART1_FIFO_SWFC 0
#define MEMORYDMA_M_READ_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define MEMORYDMA_M_READ_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define MEMORYDMA_M_READ_HPS_0_I2C0_BASE 0xffc04000
#define MEMORYDMA_M_READ_HPS_0_I2C0_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define MEMORYDMA_M_READ_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define MEMORYDMA_M_READ_HPS_0_I2C1_BASE 0xffc05000
#define MEMORYDMA_M_READ_HPS_0_I2C1_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define MEMORYDMA_M_READ_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define MEMORYDMA_M_READ_HPS_0_I2C2_BASE 0xffc06000
#define MEMORYDMA_M_READ_HPS_0_I2C2_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define MEMORYDMA_M_READ_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define MEMORYDMA_M_READ_HPS_0_I2C3_BASE 0xffc07000
#define MEMORYDMA_M_READ_HPS_0_I2C3_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define MEMORYDMA_M_READ_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define MEMORYDMA_M_READ_HPS_0_TIMER0_BASE 0xffc08000
#define MEMORYDMA_M_READ_HPS_0_TIMER0_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define MEMORYDMA_M_READ_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define MEMORYDMA_M_READ_HPS_0_TIMER1_BASE 0xffc09000
#define MEMORYDMA_M_READ_HPS_0_TIMER1_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define MEMORYDMA_M_READ_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define MEMORYDMA_M_READ_HPS_0_SDRCTL_BASE 0xffc25000
#define MEMORYDMA_M_READ_HPS_0_SDRCTL_SPAN 4096
#define MEMORYDMA_M_READ_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define MEMORYDMA_M_READ_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define MEMORYDMA_M_READ_HPS_0_TIMER2_BASE 0xffd00000
#define MEMORYDMA_M_READ_HPS_0_TIMER2_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define MEMORYDMA_M_READ_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define MEMORYDMA_M_READ_HPS_0_TIMER3_BASE 0xffd01000
#define MEMORYDMA_M_READ_HPS_0_TIMER3_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define MEMORYDMA_M_READ_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define MEMORYDMA_M_READ_HPS_0_CLKMGR_BASE 0xffd04000
#define MEMORYDMA_M_READ_HPS_0_CLKMGR_SPAN 4096
#define MEMORYDMA_M_READ_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define MEMORYDMA_M_READ_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define MEMORYDMA_M_READ_HPS_0_RSTMGR_BASE 0xffd05000
#define MEMORYDMA_M_READ_HPS_0_RSTMGR_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define MEMORYDMA_M_READ_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define MEMORYDMA_M_READ_HPS_0_SYSMGR_BASE 0xffd08000
#define MEMORYDMA_M_READ_HPS_0_SYSMGR_SPAN 1024
#define MEMORYDMA_M_READ_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define MEMORYDMA_M_READ_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define MEMORYDMA_M_READ_HPS_0_DMA_BASE 0xffe01000
#define MEMORYDMA_M_READ_HPS_0_DMA_SPAN 4096
#define MEMORYDMA_M_READ_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_SPIM0_COMPONENT_TYPE spi
#define MEMORYDMA_M_READ_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define MEMORYDMA_M_READ_HPS_0_SPIM0_BASE 0xfff00000
#define MEMORYDMA_M_READ_HPS_0_SPIM0_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_SPIM1_COMPONENT_TYPE spi
#define MEMORYDMA_M_READ_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define MEMORYDMA_M_READ_HPS_0_SPIM1_BASE 0xfff01000
#define MEMORYDMA_M_READ_HPS_0_SPIM1_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define MEMORYDMA_M_READ_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define MEMORYDMA_M_READ_HPS_0_TIMER_BASE 0xfffec600
#define MEMORYDMA_M_READ_HPS_0_TIMER_SPAN 256
#define MEMORYDMA_M_READ_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_SPAN 4096
#define MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define MEMORYDMA_M_READ_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define MEMORYDMA_M_READ_HPS_0_L2_BASE 0xfffef000
#define MEMORYDMA_M_READ_HPS_0_L2_SPAN 4096
#define MEMORYDMA_M_READ_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'MemoryDMA_m_read'.
 * The macros are prefixed with 'MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_SPAN 65536
#define MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_END 0xffffffff
#define MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_WRITABLE 1
#define MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'MemoryDMA_m_write'.
 * The macros are prefixed with 'MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_BASE 0x20000
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SPAN 65536
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_END 0x2ffff
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_WRITABLE 1
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the master group 'MemoryDMA_m_write'.
 * The macros are prefixed with 'MEMORYDMA_M_WRITE_MYBUS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MEMORYDMA_M_WRITE_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define MEMORYDMA_M_WRITE_MYBUS_COMPONENT_NAME myBus
#define MEMORYDMA_M_WRITE_MYBUS_BASE 0x30000
#define MEMORYDMA_M_WRITE_MYBUS_SPAN 16
#define MEMORYDMA_M_WRITE_MYBUS_END 0x3000f
#define MEMORYDMA_M_WRITE_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define MEMORYDMA_M_WRITE_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MEMORYDMA_M_WRITE_MYBUS_CAPTURE 0
#define MEMORYDMA_M_WRITE_MYBUS_DATA_WIDTH 8
#define MEMORYDMA_M_WRITE_MYBUS_DO_TEST_BENCH_WIRING 0
#define MEMORYDMA_M_WRITE_MYBUS_DRIVEN_SIM_VALUE 0
#define MEMORYDMA_M_WRITE_MYBUS_EDGE_TYPE NONE
#define MEMORYDMA_M_WRITE_MYBUS_FREQ 2000000
#define MEMORYDMA_M_WRITE_MYBUS_HAS_IN 0
#define MEMORYDMA_M_WRITE_MYBUS_HAS_OUT 1
#define MEMORYDMA_M_WRITE_MYBUS_HAS_TRI 0
#define MEMORYDMA_M_WRITE_MYBUS_IRQ_TYPE NONE
#define MEMORYDMA_M_WRITE_MYBUS_RESET_VALUE 0

/*
 * Macros for module 'dma_0', class 'altera_avalon_dma'.
 * The macros are prefixed with 'DMA_0_'.
 * The prefix comes from the module name.
 */
#define DMA_0_COMPONENT_TYPE altera_avalon_dma
#define DMA_0_COMPONENT_NAME dma_0
#define DMA_0_ALLOW_BYTE_TRANSACTIONS 1
#define DMA_0_ALLOW_DOUBLEWORD_TRANSACTIONS 1
#define DMA_0_ALLOW_HW_TRANSACTIONS 1
#define DMA_0_ALLOW_QUADWORD_TRANSACTIONS 1
#define DMA_0_ALLOW_WORD_TRANSACTIONS 1
#define DMA_0_LENGTHWIDTH 13
#define DMA_0_MAX_BURST_SIZE 128

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'dma_0_read_master'.
 * The macros are prefixed with 'DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_BASE 0x0
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SPAN 65536
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_END 0xffff
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_WRITABLE 1
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'dma_0_read_master'.
 * The macros are prefixed with 'DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_BASE 0x20000
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SPAN 65536
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_END 0x2ffff
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_WRITABLE 1
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the master group 'dma_0_read_master'.
 * The macros are prefixed with 'DMA_0_READ_MASTER_MYBUS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define DMA_0_READ_MASTER_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define DMA_0_READ_MASTER_MYBUS_COMPONENT_NAME myBus
#define DMA_0_READ_MASTER_MYBUS_BASE 0x30000
#define DMA_0_READ_MASTER_MYBUS_SPAN 16
#define DMA_0_READ_MASTER_MYBUS_END 0x3000f
#define DMA_0_READ_MASTER_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define DMA_0_READ_MASTER_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DMA_0_READ_MASTER_MYBUS_CAPTURE 0
#define DMA_0_READ_MASTER_MYBUS_DATA_WIDTH 8
#define DMA_0_READ_MASTER_MYBUS_DO_TEST_BENCH_WIRING 0
#define DMA_0_READ_MASTER_MYBUS_DRIVEN_SIM_VALUE 0
#define DMA_0_READ_MASTER_MYBUS_EDGE_TYPE NONE
#define DMA_0_READ_MASTER_MYBUS_FREQ 2000000
#define DMA_0_READ_MASTER_MYBUS_HAS_IN 0
#define DMA_0_READ_MASTER_MYBUS_HAS_OUT 1
#define DMA_0_READ_MASTER_MYBUS_HAS_TRI 0
#define DMA_0_READ_MASTER_MYBUS_IRQ_TYPE NONE
#define DMA_0_READ_MASTER_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'dma_0_write_master'.
 * The macros are prefixed with 'DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_BASE 0x0
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SPAN 65536
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_END 0xffff
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_WRITABLE 1
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'dma_0_write_master'.
 * The macros are prefixed with 'DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_BASE 0x20000
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SPAN 65536
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_END 0x2ffff
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_WRITABLE 1
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the master group 'dma_0_write_master'.
 * The macros are prefixed with 'DMA_0_WRITE_MASTER_MYBUS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define DMA_0_WRITE_MASTER_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define DMA_0_WRITE_MASTER_MYBUS_COMPONENT_NAME myBus
#define DMA_0_WRITE_MASTER_MYBUS_BASE 0x30000
#define DMA_0_WRITE_MASTER_MYBUS_SPAN 16
#define DMA_0_WRITE_MASTER_MYBUS_END 0x3000f
#define DMA_0_WRITE_MASTER_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define DMA_0_WRITE_MASTER_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DMA_0_WRITE_MASTER_MYBUS_CAPTURE 0
#define DMA_0_WRITE_MASTER_MYBUS_DATA_WIDTH 8
#define DMA_0_WRITE_MASTER_MYBUS_DO_TEST_BENCH_WIRING 0
#define DMA_0_WRITE_MASTER_MYBUS_DRIVEN_SIM_VALUE 0
#define DMA_0_WRITE_MASTER_MYBUS_EDGE_TYPE NONE
#define DMA_0_WRITE_MASTER_MYBUS_FREQ 2000000
#define DMA_0_WRITE_MASTER_MYBUS_HAS_IN 0
#define DMA_0_WRITE_MASTER_MYBUS_HAS_OUT 1
#define DMA_0_WRITE_MASTER_MYBUS_HAS_TRI 0
#define DMA_0_WRITE_MASTER_MYBUS_IRQ_TYPE NONE
#define DMA_0_WRITE_MASTER_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_BASE 0x0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_SPAN 65536
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_END 0xffff
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_WRITABLE 1
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define FPGA_ONLY_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define FPGA_ONLY_MASTER_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define FPGA_ONLY_MASTER_SYSID_QSYS_BASE 0x10000
#define FPGA_ONLY_MASTER_SYSID_QSYS_SPAN 8
#define FPGA_ONLY_MASTER_SYSID_QSYS_END 0x10007
#define FPGA_ONLY_MASTER_SYSID_QSYS_ID 2899645186
#define FPGA_ONLY_MASTER_SYSID_QSYS_TIMESTAMP 1710588038

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define FPGA_ONLY_MASTER_JTAG_UART_COMPONENT_NAME jtag_uart
#define FPGA_ONLY_MASTER_JTAG_UART_BASE 0x20000
#define FPGA_ONLY_MASTER_JTAG_UART_SPAN 8
#define FPGA_ONLY_MASTER_JTAG_UART_END 0x20007
#define FPGA_ONLY_MASTER_JTAG_UART_READ_DEPTH 64
#define FPGA_ONLY_MASTER_JTAG_UART_READ_THRESHOLD 8
#define FPGA_ONLY_MASTER_JTAG_UART_WRITE_DEPTH 64
#define FPGA_ONLY_MASTER_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'intr_capturer_0', class 'intr_capturer'
 * Path to the device is from the master group 'fpga_only_master'.
 * The macros are prefixed with 'FPGA_ONLY_MASTER_INTR_CAPTURER_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define FPGA_ONLY_MASTER_INTR_CAPTURER_0_COMPONENT_TYPE intr_capturer
#define FPGA_ONLY_MASTER_INTR_CAPTURER_0_COMPONENT_NAME intr_capturer_0
#define FPGA_ONLY_MASTER_INTR_CAPTURER_0_BASE 0x30000
#define FPGA_ONLY_MASTER_INTR_CAPTURER_0_SPAN 8
#define FPGA_ONLY_MASTER_INTR_CAPTURER_0_END 0x30007

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_ONCHIP_MEMORY2_0_BASE 0x0
#define HPS_0_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_ONCHIP_MEMORY2_0_END 0xffff
#define HPS_0_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'testOut', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TESTOUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TESTOUT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TESTOUT_COMPONENT_NAME testOut
#define HPS_0_TESTOUT_BASE 0x0
#define HPS_0_TESTOUT_SPAN 16
#define HPS_0_TESTOUT_END 0xf
#define HPS_0_TESTOUT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TESTOUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TESTOUT_CAPTURE 0
#define HPS_0_TESTOUT_DATA_WIDTH 8
#define HPS_0_TESTOUT_DO_TEST_BENCH_WIRING 0
#define HPS_0_TESTOUT_DRIVEN_SIM_VALUE 0
#define HPS_0_TESTOUT_EDGE_TYPE NONE
#define HPS_0_TESTOUT_FREQ 50000000
#define HPS_0_TESTOUT_HAS_IN 1
#define HPS_0_TESTOUT_HAS_OUT 0
#define HPS_0_TESTOUT_HAS_TRI 0
#define HPS_0_TESTOUT_IRQ_TYPE NONE
#define HPS_0_TESTOUT_RESET_VALUE 0

/*
 * Macros for device 'pio_reg1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PIO_REG1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PIO_REG1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PIO_REG1_COMPONENT_NAME pio_reg1
#define HPS_0_PIO_REG1_BASE 0x10
#define HPS_0_PIO_REG1_SPAN 16
#define HPS_0_PIO_REG1_END 0x1f
#define HPS_0_PIO_REG1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PIO_REG1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PIO_REG1_CAPTURE 0
#define HPS_0_PIO_REG1_DATA_WIDTH 8
#define HPS_0_PIO_REG1_DO_TEST_BENCH_WIRING 0
#define HPS_0_PIO_REG1_DRIVEN_SIM_VALUE 0
#define HPS_0_PIO_REG1_EDGE_TYPE NONE
#define HPS_0_PIO_REG1_FREQ 50000000
#define HPS_0_PIO_REG1_HAS_IN 0
#define HPS_0_PIO_REG1_HAS_OUT 1
#define HPS_0_PIO_REG1_HAS_TRI 0
#define HPS_0_PIO_REG1_IRQ_TYPE NONE
#define HPS_0_PIO_REG1_RESET_VALUE 255

/*
 * Macros for device 'pio_reg2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PIO_REG2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PIO_REG2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PIO_REG2_COMPONENT_NAME pio_reg2
#define HPS_0_PIO_REG2_BASE 0x20
#define HPS_0_PIO_REG2_SPAN 16
#define HPS_0_PIO_REG2_END 0x2f
#define HPS_0_PIO_REG2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PIO_REG2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PIO_REG2_CAPTURE 0
#define HPS_0_PIO_REG2_DATA_WIDTH 8
#define HPS_0_PIO_REG2_DO_TEST_BENCH_WIRING 0
#define HPS_0_PIO_REG2_DRIVEN_SIM_VALUE 0
#define HPS_0_PIO_REG2_EDGE_TYPE NONE
#define HPS_0_PIO_REG2_FREQ 50000000
#define HPS_0_PIO_REG2_HAS_IN 0
#define HPS_0_PIO_REG2_HAS_OUT 1
#define HPS_0_PIO_REG2_HAS_TRI 0
#define HPS_0_PIO_REG2_IRQ_TYPE NONE
#define HPS_0_PIO_REG2_RESET_VALUE 255

/*
 * Macros for device 'pio_reg3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PIO_REG3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PIO_REG3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PIO_REG3_COMPONENT_NAME pio_reg3
#define HPS_0_PIO_REG3_BASE 0x30
#define HPS_0_PIO_REG3_SPAN 16
#define HPS_0_PIO_REG3_END 0x3f
#define HPS_0_PIO_REG3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PIO_REG3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PIO_REG3_CAPTURE 0
#define HPS_0_PIO_REG3_DATA_WIDTH 8
#define HPS_0_PIO_REG3_DO_TEST_BENCH_WIRING 0
#define HPS_0_PIO_REG3_DRIVEN_SIM_VALUE 0
#define HPS_0_PIO_REG3_EDGE_TYPE NONE
#define HPS_0_PIO_REG3_FREQ 50000000
#define HPS_0_PIO_REG3_HAS_IN 1
#define HPS_0_PIO_REG3_HAS_OUT 0
#define HPS_0_PIO_REG3_HAS_TRI 0
#define HPS_0_PIO_REG3_IRQ_TYPE NONE
#define HPS_0_PIO_REG3_RESET_VALUE 0

/*
 * Macros for device 'MemoryDMA', class 'altera_avalon_sgdma'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_MEMORYDMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_COMPONENT_TYPE altera_avalon_sgdma
#define HPS_0_MEMORYDMA_COMPONENT_NAME MemoryDMA
#define HPS_0_MEMORYDMA_BASE 0x40
#define HPS_0_MEMORYDMA_SPAN 64
#define HPS_0_MEMORYDMA_END 0x7f
#define HPS_0_MEMORYDMA_ADDRESS_WIDTH 32
#define HPS_0_MEMORYDMA_ALWAYS_DO_MAX_BURST 1
#define HPS_0_MEMORYDMA_ATLANTIC_CHANNEL_DATA_WIDTH 4
#define HPS_0_MEMORYDMA_AVALON_MM_BYTE_REORDER_MODE 0
#define HPS_0_MEMORYDMA_BURST_DATA_WIDTH 8
#define HPS_0_MEMORYDMA_BURST_TRANSFER 0
#define HPS_0_MEMORYDMA_BYTES_TO_TRANSFER_DATA_WIDTH 16
#define HPS_0_MEMORYDMA_CHAIN_WRITEBACK_DATA_WIDTH 32
#define HPS_0_MEMORYDMA_COMMAND_FIFO_DATA_WIDTH 104
#define HPS_0_MEMORYDMA_CONTROL_DATA_WIDTH 8
#define HPS_0_MEMORYDMA_CONTROL_SLAVE_ADDRESS_WIDTH 4
#define HPS_0_MEMORYDMA_CONTROL_SLAVE_DATA_WIDTH 32
#define HPS_0_MEMORYDMA_DESCRIPTOR_READ_BURST 0
#define HPS_0_MEMORYDMA_DESC_DATA_WIDTH 32
#define HPS_0_MEMORYDMA_HAS_READ_BLOCK 1
#define HPS_0_MEMORYDMA_HAS_WRITE_BLOCK 1
#define HPS_0_MEMORYDMA_IN_ERROR_WIDTH 0
#define HPS_0_MEMORYDMA_OUT_ERROR_WIDTH 0
#define HPS_0_MEMORYDMA_READ_BLOCK_DATA_WIDTH 32
#define HPS_0_MEMORYDMA_READ_BURSTCOUNT_WIDTH 4
#define HPS_0_MEMORYDMA_STATUS_TOKEN_DATA_WIDTH 24
#define HPS_0_MEMORYDMA_STREAM_DATA_WIDTH 32
#define HPS_0_MEMORYDMA_UNALIGNED_TRANSFER 0
#define HPS_0_MEMORYDMA_WRITE_BLOCK_DATA_WIDTH 32
#define HPS_0_MEMORYDMA_WRITE_BURSTCOUNT_WIDTH 4

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GMAC0_SPAN 8192
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GMAC1_SPAN 8192
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SDMMC_SPAN 4096
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_QSPI_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_MEMORYDMA_M_READ_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_MEMORYDMA_M_READ_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_QSPI_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_MEMORYDMA_M_READ_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_MEMORYDMA_M_READ_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_MEMORYDMA_M_READ_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO0_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO1_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO2_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_MEMORYDMA_M_READ_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_MEMORYDMA_M_READ_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_L3REGS_SPAN 4096
#define HPS_0_MEMORYDMA_M_READ_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_NAND0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_MEMORYDMA_M_READ_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_NAND0_SPAN 65536
#define HPS_0_MEMORYDMA_M_READ_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_USB0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_MEMORYDMA_M_READ_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_USB0_SPAN 262144
#define HPS_0_MEMORYDMA_M_READ_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_USB1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_MEMORYDMA_M_READ_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_MEMORYDMA_M_READ_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_USB1_SPAN 262144
#define HPS_0_MEMORYDMA_M_READ_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_MEMORYDMA_M_READ_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_DCAN0_SPAN 4096
#define HPS_0_MEMORYDMA_M_READ_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_MEMORYDMA_M_READ_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_MEMORYDMA_M_READ_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_DCAN1_SPAN 4096
#define HPS_0_MEMORYDMA_M_READ_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_UART0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART0_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART0_END 0xffc020ff
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_UART1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART1_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART1_END 0xffc030ff
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_I2C0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C0_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_I2C1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C1_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_I2C2_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C2_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_I2C3_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C3_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER0_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER1_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER2_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER3_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_MEMORYDMA_M_READ_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_MEMORYDMA_M_READ_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_MEMORYDMA_M_READ_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_MEMORYDMA_M_READ_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_MEMORYDMA_M_READ_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_RSTMGR_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_DMA_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_MEMORYDMA_M_READ_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_MEMORYDMA_M_READ_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_DMA_SPAN 4096
#define HPS_0_MEMORYDMA_M_READ_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SPIM0_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SPIM1_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER_SPAN 256
#define HPS_0_MEMORYDMA_M_READ_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_L2_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_MEMORYDMA_M_READ_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_MEMORYDMA_M_READ_HPS_0_L2_BASE 0xfffef000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_L2_SPAN 4096
#define HPS_0_MEMORYDMA_M_READ_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_write
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_BASE 0x20000
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SPAN 65536
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_END 0x2ffff
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_WRITABLE 1
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   MemoryDMA_m_write
 * The macros are prefixed with 'HPS_0_MEMORYDMA_M_WRITE_MYBUS_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_COMPONENT_NAME myBus
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_BASE 0x30000
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_SPAN 16
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_END 0x3000f
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_CAPTURE 0
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_DATA_WIDTH 8
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_DO_TEST_BENCH_WIRING 0
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_DRIVEN_SIM_VALUE 0
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_EDGE_TYPE NONE
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_FREQ 2000000
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_HAS_IN 0
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_HAS_OUT 1
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_HAS_TRI 0
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_IRQ_TYPE NONE
#define HPS_0_MEMORYDMA_M_WRITE_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'dma_0', class 'altera_avalon_dma'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_DMA_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_DMA_0_COMPONENT_TYPE altera_avalon_dma
#define HPS_0_DMA_0_COMPONENT_NAME dma_0
#define HPS_0_DMA_0_BASE 0x80
#define HPS_0_DMA_0_SPAN 32
#define HPS_0_DMA_0_END 0x9f
#define HPS_0_DMA_0_ALLOW_BYTE_TRANSACTIONS 1
#define HPS_0_DMA_0_ALLOW_DOUBLEWORD_TRANSACTIONS 1
#define HPS_0_DMA_0_ALLOW_HW_TRANSACTIONS 1
#define HPS_0_DMA_0_ALLOW_QUADWORD_TRANSACTIONS 1
#define HPS_0_DMA_0_ALLOW_WORD_TRANSACTIONS 1
#define HPS_0_DMA_0_LENGTHWIDTH 13
#define HPS_0_DMA_0_MAX_BURST_SIZE 128

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   dma_0_read_master
 * The macros are prefixed with 'HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_BASE 0x0
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_END 0xffff
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   dma_0_read_master
 * The macros are prefixed with 'HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_BASE 0x20000
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SPAN 65536
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_END 0x2ffff
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_WRITABLE 1
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   dma_0_read_master
 * The macros are prefixed with 'HPS_0_DMA_0_READ_MASTER_MYBUS_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_DMA_0_READ_MASTER_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_DMA_0_READ_MASTER_MYBUS_COMPONENT_NAME myBus
#define HPS_0_DMA_0_READ_MASTER_MYBUS_BASE 0x30000
#define HPS_0_DMA_0_READ_MASTER_MYBUS_SPAN 16
#define HPS_0_DMA_0_READ_MASTER_MYBUS_END 0x3000f
#define HPS_0_DMA_0_READ_MASTER_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_DMA_0_READ_MASTER_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_DMA_0_READ_MASTER_MYBUS_CAPTURE 0
#define HPS_0_DMA_0_READ_MASTER_MYBUS_DATA_WIDTH 8
#define HPS_0_DMA_0_READ_MASTER_MYBUS_DO_TEST_BENCH_WIRING 0
#define HPS_0_DMA_0_READ_MASTER_MYBUS_DRIVEN_SIM_VALUE 0
#define HPS_0_DMA_0_READ_MASTER_MYBUS_EDGE_TYPE NONE
#define HPS_0_DMA_0_READ_MASTER_MYBUS_FREQ 2000000
#define HPS_0_DMA_0_READ_MASTER_MYBUS_HAS_IN 0
#define HPS_0_DMA_0_READ_MASTER_MYBUS_HAS_OUT 1
#define HPS_0_DMA_0_READ_MASTER_MYBUS_HAS_TRI 0
#define HPS_0_DMA_0_READ_MASTER_MYBUS_IRQ_TYPE NONE
#define HPS_0_DMA_0_READ_MASTER_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   dma_0_write_master
 * The macros are prefixed with 'HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_BASE 0x0
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_END 0xffff
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   dma_0_write_master
 * The macros are prefixed with 'HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_BASE 0x20000
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SPAN 65536
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_END 0x2ffff
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_WRITABLE 1
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the following master groups (in order):
 *   hps_0
 *   dma_0_write_master
 * The macros are prefixed with 'HPS_0_DMA_0_WRITE_MASTER_MYBUS_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_COMPONENT_NAME myBus
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_BASE 0x30000
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_SPAN 16
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_END 0x3000f
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_CAPTURE 0
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_DATA_WIDTH 8
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_DO_TEST_BENCH_WIRING 0
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_DRIVEN_SIM_VALUE 0
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_EDGE_TYPE NONE
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_FREQ 2000000
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_HAS_IN 0
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_HAS_OUT 1
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_HAS_TRI 0
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_IRQ_TYPE NONE
#define HPS_0_DMA_0_WRITE_MASTER_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'pio_led', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PIO_LED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PIO_LED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PIO_LED_COMPONENT_NAME pio_led
#define HPS_0_PIO_LED_BASE 0x10000
#define HPS_0_PIO_LED_SPAN 16
#define HPS_0_PIO_LED_END 0x1000f
#define HPS_0_PIO_LED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PIO_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PIO_LED_CAPTURE 0
#define HPS_0_PIO_LED_DATA_WIDTH 8
#define HPS_0_PIO_LED_DO_TEST_BENCH_WIRING 0
#define HPS_0_PIO_LED_DRIVEN_SIM_VALUE 0
#define HPS_0_PIO_LED_EDGE_TYPE NONE
#define HPS_0_PIO_LED_FREQ 50000000
#define HPS_0_PIO_LED_HAS_IN 0
#define HPS_0_PIO_LED_HAS_OUT 1
#define HPS_0_PIO_LED_HAS_TRI 0
#define HPS_0_PIO_LED_IRQ_TYPE NONE
#define HPS_0_PIO_LED_RESET_VALUE 255

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_SYSID_QSYS_BASE 0x10000
#define HPS_0_SYSID_QSYS_SPAN 8
#define HPS_0_SYSID_QSYS_END 0x10007
#define HPS_0_SYSID_QSYS_ID 2899645186
#define HPS_0_SYSID_QSYS_TIMESTAMP 1710588038

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define HPS_0_ONCHIP_MEMORY2_1_BASE 0x20000
#define HPS_0_ONCHIP_MEMORY2_1_SPAN 65536
#define HPS_0_ONCHIP_MEMORY2_1_END 0x2ffff
#define HPS_0_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define HPS_0_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define HPS_0_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define HPS_0_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define HPS_0_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define HPS_0_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define HPS_0_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define HPS_0_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define HPS_0_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define HPS_0_ONCHIP_MEMORY2_1_WRITABLE 1
#define HPS_0_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_JTAG_UART_BASE 0x20000
#define HPS_0_JTAG_UART_SPAN 8
#define HPS_0_JTAG_UART_END 0x20007
#define HPS_0_JTAG_UART_IRQ 2
#define HPS_0_JTAG_UART_READ_DEPTH 64
#define HPS_0_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_MYBUS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_MYBUS_COMPONENT_NAME myBus
#define HPS_0_MYBUS_BASE 0x30000
#define HPS_0_MYBUS_SPAN 16
#define HPS_0_MYBUS_END 0x3000f
#define HPS_0_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_MYBUS_CAPTURE 0
#define HPS_0_MYBUS_DATA_WIDTH 8
#define HPS_0_MYBUS_DO_TEST_BENCH_WIRING 0
#define HPS_0_MYBUS_DRIVEN_SIM_VALUE 0
#define HPS_0_MYBUS_EDGE_TYPE NONE
#define HPS_0_MYBUS_FREQ 2000000
#define HPS_0_MYBUS_HAS_IN 0
#define HPS_0_MYBUS_HAS_OUT 1
#define HPS_0_MYBUS_HAS_TRI 0
#define HPS_0_MYBUS_IRQ_TYPE NONE
#define HPS_0_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'test', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TEST_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TEST_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TEST_COMPONENT_NAME test
#define HPS_0_TEST_BASE 0x40000
#define HPS_0_TEST_SPAN 16
#define HPS_0_TEST_END 0x4000f
#define HPS_0_TEST_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TEST_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TEST_CAPTURE 0
#define HPS_0_TEST_DATA_WIDTH 8
#define HPS_0_TEST_DO_TEST_BENCH_WIRING 0
#define HPS_0_TEST_DRIVEN_SIM_VALUE 0
#define HPS_0_TEST_EDGE_TYPE NONE
#define HPS_0_TEST_FREQ 50000000
#define HPS_0_TEST_HAS_IN 0
#define HPS_0_TEST_HAS_OUT 1
#define HPS_0_TEST_HAS_TRI 0
#define HPS_0_TEST_IRQ_TYPE NONE
#define HPS_0_TEST_RESET_VALUE 255

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_BASE 0x0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_END 0xffff
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'testOut', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TESTOUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TESTOUT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TESTOUT_COMPONENT_NAME testOut
#define HPS_0_BRIDGES_TESTOUT_BASE 0x0
#define HPS_0_BRIDGES_TESTOUT_SPAN 16
#define HPS_0_BRIDGES_TESTOUT_END 0xf
#define HPS_0_BRIDGES_TESTOUT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TESTOUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TESTOUT_CAPTURE 0
#define HPS_0_BRIDGES_TESTOUT_DATA_WIDTH 8
#define HPS_0_BRIDGES_TESTOUT_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TESTOUT_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TESTOUT_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TESTOUT_FREQ 50000000
#define HPS_0_BRIDGES_TESTOUT_HAS_IN 1
#define HPS_0_BRIDGES_TESTOUT_HAS_OUT 0
#define HPS_0_BRIDGES_TESTOUT_HAS_TRI 0
#define HPS_0_BRIDGES_TESTOUT_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TESTOUT_RESET_VALUE 0

/*
 * Macros for device 'pio_reg1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PIO_REG1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PIO_REG1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PIO_REG1_COMPONENT_NAME pio_reg1
#define HPS_0_BRIDGES_PIO_REG1_BASE 0x10
#define HPS_0_BRIDGES_PIO_REG1_SPAN 16
#define HPS_0_BRIDGES_PIO_REG1_END 0x1f
#define HPS_0_BRIDGES_PIO_REG1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PIO_REG1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PIO_REG1_CAPTURE 0
#define HPS_0_BRIDGES_PIO_REG1_DATA_WIDTH 8
#define HPS_0_BRIDGES_PIO_REG1_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PIO_REG1_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PIO_REG1_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PIO_REG1_FREQ 50000000
#define HPS_0_BRIDGES_PIO_REG1_HAS_IN 0
#define HPS_0_BRIDGES_PIO_REG1_HAS_OUT 1
#define HPS_0_BRIDGES_PIO_REG1_HAS_TRI 0
#define HPS_0_BRIDGES_PIO_REG1_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PIO_REG1_RESET_VALUE 255

/*
 * Macros for device 'pio_reg2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PIO_REG2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PIO_REG2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PIO_REG2_COMPONENT_NAME pio_reg2
#define HPS_0_BRIDGES_PIO_REG2_BASE 0x20
#define HPS_0_BRIDGES_PIO_REG2_SPAN 16
#define HPS_0_BRIDGES_PIO_REG2_END 0x2f
#define HPS_0_BRIDGES_PIO_REG2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PIO_REG2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PIO_REG2_CAPTURE 0
#define HPS_0_BRIDGES_PIO_REG2_DATA_WIDTH 8
#define HPS_0_BRIDGES_PIO_REG2_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PIO_REG2_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PIO_REG2_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PIO_REG2_FREQ 50000000
#define HPS_0_BRIDGES_PIO_REG2_HAS_IN 0
#define HPS_0_BRIDGES_PIO_REG2_HAS_OUT 1
#define HPS_0_BRIDGES_PIO_REG2_HAS_TRI 0
#define HPS_0_BRIDGES_PIO_REG2_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PIO_REG2_RESET_VALUE 255

/*
 * Macros for device 'pio_reg3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PIO_REG3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PIO_REG3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PIO_REG3_COMPONENT_NAME pio_reg3
#define HPS_0_BRIDGES_PIO_REG3_BASE 0x30
#define HPS_0_BRIDGES_PIO_REG3_SPAN 16
#define HPS_0_BRIDGES_PIO_REG3_END 0x3f
#define HPS_0_BRIDGES_PIO_REG3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PIO_REG3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PIO_REG3_CAPTURE 0
#define HPS_0_BRIDGES_PIO_REG3_DATA_WIDTH 8
#define HPS_0_BRIDGES_PIO_REG3_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PIO_REG3_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PIO_REG3_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PIO_REG3_FREQ 50000000
#define HPS_0_BRIDGES_PIO_REG3_HAS_IN 1
#define HPS_0_BRIDGES_PIO_REG3_HAS_OUT 0
#define HPS_0_BRIDGES_PIO_REG3_HAS_TRI 0
#define HPS_0_BRIDGES_PIO_REG3_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PIO_REG3_RESET_VALUE 0

/*
 * Macros for device 'MemoryDMA', class 'altera_avalon_sgdma'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_COMPONENT_TYPE altera_avalon_sgdma
#define HPS_0_BRIDGES_MEMORYDMA_COMPONENT_NAME MemoryDMA
#define HPS_0_BRIDGES_MEMORYDMA_BASE 0x40
#define HPS_0_BRIDGES_MEMORYDMA_SPAN 64
#define HPS_0_BRIDGES_MEMORYDMA_END 0x7f
#define HPS_0_BRIDGES_MEMORYDMA_ADDRESS_WIDTH 32
#define HPS_0_BRIDGES_MEMORYDMA_ALWAYS_DO_MAX_BURST 1
#define HPS_0_BRIDGES_MEMORYDMA_ATLANTIC_CHANNEL_DATA_WIDTH 4
#define HPS_0_BRIDGES_MEMORYDMA_AVALON_MM_BYTE_REORDER_MODE 0
#define HPS_0_BRIDGES_MEMORYDMA_BURST_DATA_WIDTH 8
#define HPS_0_BRIDGES_MEMORYDMA_BURST_TRANSFER 0
#define HPS_0_BRIDGES_MEMORYDMA_BYTES_TO_TRANSFER_DATA_WIDTH 16
#define HPS_0_BRIDGES_MEMORYDMA_CHAIN_WRITEBACK_DATA_WIDTH 32
#define HPS_0_BRIDGES_MEMORYDMA_COMMAND_FIFO_DATA_WIDTH 104
#define HPS_0_BRIDGES_MEMORYDMA_CONTROL_DATA_WIDTH 8
#define HPS_0_BRIDGES_MEMORYDMA_CONTROL_SLAVE_ADDRESS_WIDTH 4
#define HPS_0_BRIDGES_MEMORYDMA_CONTROL_SLAVE_DATA_WIDTH 32
#define HPS_0_BRIDGES_MEMORYDMA_DESCRIPTOR_READ_BURST 0
#define HPS_0_BRIDGES_MEMORYDMA_DESC_DATA_WIDTH 32
#define HPS_0_BRIDGES_MEMORYDMA_HAS_READ_BLOCK 1
#define HPS_0_BRIDGES_MEMORYDMA_HAS_WRITE_BLOCK 1
#define HPS_0_BRIDGES_MEMORYDMA_IN_ERROR_WIDTH 0
#define HPS_0_BRIDGES_MEMORYDMA_OUT_ERROR_WIDTH 0
#define HPS_0_BRIDGES_MEMORYDMA_READ_BLOCK_DATA_WIDTH 32
#define HPS_0_BRIDGES_MEMORYDMA_READ_BURSTCOUNT_WIDTH 4
#define HPS_0_BRIDGES_MEMORYDMA_STATUS_TOKEN_DATA_WIDTH 24
#define HPS_0_BRIDGES_MEMORYDMA_STREAM_DATA_WIDTH 32
#define HPS_0_BRIDGES_MEMORYDMA_UNALIGNED_TRANSFER 0
#define HPS_0_BRIDGES_MEMORYDMA_WRITE_BLOCK_DATA_WIDTH 32
#define HPS_0_BRIDGES_MEMORYDMA_WRITE_BURSTCOUNT_WIDTH 4

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GMAC0_SPAN 8192
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GMAC1_SPAN 8192
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SDMMC_SPAN 4096
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_QSPI_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_QSPI_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO0_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO1_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO2_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_L3REGS_SPAN 4096
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_NAND0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_NAND0_SPAN 65536
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_USB0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_USB0_SPAN 262144
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_USB1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_USB1_SPAN 262144
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DCAN0_SPAN 4096
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DCAN1_SPAN 4096
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART0_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART0_END 0xffc020ff
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART1_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART1_END 0xffc030ff
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C0_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C1_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C2_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C2_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C3_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C3_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER0_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER1_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER2_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER3_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_RSTMGR_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DMA_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DMA_SPAN 4096
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SPIM0_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SPIM1_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER_SPAN 256
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_L2_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_L2_BASE 0xfffef000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_L2_SPAN 4096
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_BRIDGES_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_write
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_BASE 0x20000
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SPAN 65536
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_END 0x2ffff
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_WRITABLE 1
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   MemoryDMA_m_write
 * The macros are prefixed with 'HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_COMPONENT_NAME myBus
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_BASE 0x30000
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_SPAN 16
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_END 0x3000f
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_CAPTURE 0
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_DATA_WIDTH 8
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_EDGE_TYPE NONE
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_FREQ 2000000
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_HAS_IN 0
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_HAS_OUT 1
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_HAS_TRI 0
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_IRQ_TYPE NONE
#define HPS_0_BRIDGES_MEMORYDMA_M_WRITE_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'dma_0', class 'altera_avalon_dma'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_DMA_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_DMA_0_COMPONENT_TYPE altera_avalon_dma
#define HPS_0_BRIDGES_DMA_0_COMPONENT_NAME dma_0
#define HPS_0_BRIDGES_DMA_0_BASE 0x80
#define HPS_0_BRIDGES_DMA_0_SPAN 32
#define HPS_0_BRIDGES_DMA_0_END 0x9f
#define HPS_0_BRIDGES_DMA_0_ALLOW_BYTE_TRANSACTIONS 1
#define HPS_0_BRIDGES_DMA_0_ALLOW_DOUBLEWORD_TRANSACTIONS 1
#define HPS_0_BRIDGES_DMA_0_ALLOW_HW_TRANSACTIONS 1
#define HPS_0_BRIDGES_DMA_0_ALLOW_QUADWORD_TRANSACTIONS 1
#define HPS_0_BRIDGES_DMA_0_ALLOW_WORD_TRANSACTIONS 1
#define HPS_0_BRIDGES_DMA_0_LENGTHWIDTH 13
#define HPS_0_BRIDGES_DMA_0_MAX_BURST_SIZE 128

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   dma_0_read_master
 * The macros are prefixed with 'HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_BASE 0x0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_END 0xffff
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   dma_0_read_master
 * The macros are prefixed with 'HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_BASE 0x20000
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SPAN 65536
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_END 0x2ffff
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_WRITABLE 1
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   dma_0_read_master
 * The macros are prefixed with 'HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_COMPONENT_NAME myBus
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_BASE 0x30000
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_SPAN 16
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_END 0x3000f
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_CAPTURE 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_DATA_WIDTH 8
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_EDGE_TYPE NONE
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_FREQ 2000000
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_HAS_IN 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_HAS_OUT 1
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_HAS_TRI 0
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_IRQ_TYPE NONE
#define HPS_0_BRIDGES_DMA_0_READ_MASTER_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   dma_0_write_master
 * The macros are prefixed with 'HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_BASE 0x0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_END 0xffff
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   dma_0_write_master
 * The macros are prefixed with 'HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_BASE 0x20000
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SPAN 65536
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_END 0x2ffff
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_WRITABLE 1
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_bridges
 *   dma_0_write_master
 * The macros are prefixed with 'HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_COMPONENT_NAME myBus
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_BASE 0x30000
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_SPAN 16
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_END 0x3000f
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_CAPTURE 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_DATA_WIDTH 8
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_EDGE_TYPE NONE
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_FREQ 2000000
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_HAS_IN 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_HAS_OUT 1
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_HAS_TRI 0
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_IRQ_TYPE NONE
#define HPS_0_BRIDGES_DMA_0_WRITE_MASTER_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'pio_led', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PIO_LED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PIO_LED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PIO_LED_COMPONENT_NAME pio_led
#define HPS_0_BRIDGES_PIO_LED_BASE 0x10000
#define HPS_0_BRIDGES_PIO_LED_SPAN 16
#define HPS_0_BRIDGES_PIO_LED_END 0x1000f
#define HPS_0_BRIDGES_PIO_LED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PIO_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PIO_LED_CAPTURE 0
#define HPS_0_BRIDGES_PIO_LED_DATA_WIDTH 8
#define HPS_0_BRIDGES_PIO_LED_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PIO_LED_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PIO_LED_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PIO_LED_FREQ 50000000
#define HPS_0_BRIDGES_PIO_LED_HAS_IN 0
#define HPS_0_BRIDGES_PIO_LED_HAS_OUT 1
#define HPS_0_BRIDGES_PIO_LED_HAS_TRI 0
#define HPS_0_BRIDGES_PIO_LED_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PIO_LED_RESET_VALUE 255

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_BRIDGES_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_BRIDGES_SYSID_QSYS_BASE 0x10000
#define HPS_0_BRIDGES_SYSID_QSYS_SPAN 8
#define HPS_0_BRIDGES_SYSID_QSYS_END 0x10007
#define HPS_0_BRIDGES_SYSID_QSYS_ID 2899645186
#define HPS_0_BRIDGES_SYSID_QSYS_TIMESTAMP 1710588038

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_BASE 0x20000
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_SPAN 65536
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_END 0x2ffff
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_WRITABLE 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_BRIDGES_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_BRIDGES_JTAG_UART_BASE 0x20000
#define HPS_0_BRIDGES_JTAG_UART_SPAN 8
#define HPS_0_BRIDGES_JTAG_UART_END 0x20007
#define HPS_0_BRIDGES_JTAG_UART_READ_DEPTH 64
#define HPS_0_BRIDGES_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_BRIDGES_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_BRIDGES_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_MYBUS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_MYBUS_COMPONENT_NAME myBus
#define HPS_0_BRIDGES_MYBUS_BASE 0x30000
#define HPS_0_BRIDGES_MYBUS_SPAN 16
#define HPS_0_BRIDGES_MYBUS_END 0x3000f
#define HPS_0_BRIDGES_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_MYBUS_CAPTURE 0
#define HPS_0_BRIDGES_MYBUS_DATA_WIDTH 8
#define HPS_0_BRIDGES_MYBUS_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_MYBUS_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_MYBUS_EDGE_TYPE NONE
#define HPS_0_BRIDGES_MYBUS_FREQ 2000000
#define HPS_0_BRIDGES_MYBUS_HAS_IN 0
#define HPS_0_BRIDGES_MYBUS_HAS_OUT 1
#define HPS_0_BRIDGES_MYBUS_HAS_TRI 0
#define HPS_0_BRIDGES_MYBUS_IRQ_TYPE NONE
#define HPS_0_BRIDGES_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'test', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TEST_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TEST_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TEST_COMPONENT_NAME test
#define HPS_0_BRIDGES_TEST_BASE 0x40000
#define HPS_0_BRIDGES_TEST_SPAN 16
#define HPS_0_BRIDGES_TEST_END 0x4000f
#define HPS_0_BRIDGES_TEST_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TEST_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TEST_CAPTURE 0
#define HPS_0_BRIDGES_TEST_DATA_WIDTH 8
#define HPS_0_BRIDGES_TEST_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TEST_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TEST_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TEST_FREQ 50000000
#define HPS_0_BRIDGES_TEST_HAS_IN 0
#define HPS_0_BRIDGES_TEST_HAS_OUT 1
#define HPS_0_BRIDGES_TEST_HAS_TRI 0
#define HPS_0_BRIDGES_TEST_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TEST_RESET_VALUE 255

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_BRIDGES_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_BRIDGES_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_BRIDGES_HPS_0_GMAC0_SPAN 8192
#define HPS_0_BRIDGES_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_BRIDGES_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_BRIDGES_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_BRIDGES_HPS_0_GMAC1_SPAN 8192
#define HPS_0_BRIDGES_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_BRIDGES_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_BRIDGES_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_BRIDGES_HPS_0_SDMMC_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_BRIDGES_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_BRIDGES_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_BRIDGES_HPS_0_QSPI_SPAN 256
#define HPS_0_BRIDGES_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_BRIDGES_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_BRIDGES_HPS_0_GPIO0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_BRIDGES_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_BRIDGES_HPS_0_GPIO1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_BRIDGES_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_BRIDGES_HPS_0_GPIO2_SPAN 256
#define HPS_0_BRIDGES_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_BRIDGES_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_BRIDGES_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_BRIDGES_HPS_0_L3REGS_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_BRIDGES_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_BRIDGES_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_BRIDGES_HPS_0_NAND0_SPAN 65536
#define HPS_0_BRIDGES_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_BRIDGES_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_BRIDGES_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_BRIDGES_HPS_0_USB0_SPAN 262144
#define HPS_0_BRIDGES_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_BRIDGES_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_BRIDGES_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_BRIDGES_HPS_0_USB1_SPAN 262144
#define HPS_0_BRIDGES_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_BRIDGES_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_BRIDGES_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_BRIDGES_HPS_0_DCAN0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_BRIDGES_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_BRIDGES_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_BRIDGES_HPS_0_DCAN1_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_BRIDGES_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_BRIDGES_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_BRIDGES_HPS_0_UART0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_UART0_END 0xffc020ff
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_BRIDGES_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_BRIDGES_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_BRIDGES_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_BRIDGES_HPS_0_UART1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_UART1_END 0xffc030ff
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_BRIDGES_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_BRIDGES_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_BRIDGES_HPS_0_I2C0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_BRIDGES_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_BRIDGES_HPS_0_I2C1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_BRIDGES_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_BRIDGES_HPS_0_I2C2_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_BRIDGES_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_BRIDGES_HPS_0_I2C3_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_BRIDGES_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_BRIDGES_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_BRIDGES_HPS_0_TIMER0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_BRIDGES_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_BRIDGES_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_BRIDGES_HPS_0_TIMER1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_BRIDGES_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_BRIDGES_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_BRIDGES_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_BRIDGES_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_BRIDGES_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_BRIDGES_HPS_0_TIMER2_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_BRIDGES_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_BRIDGES_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_BRIDGES_HPS_0_TIMER3_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_BRIDGES_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_BRIDGES_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_BRIDGES_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_BRIDGES_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_BRIDGES_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_BRIDGES_HPS_0_RSTMGR_SPAN 256
#define HPS_0_BRIDGES_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_BRIDGES_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_BRIDGES_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_BRIDGES_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_BRIDGES_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_BRIDGES_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_BRIDGES_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_BRIDGES_HPS_0_DMA_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_BRIDGES_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_BRIDGES_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_BRIDGES_HPS_0_SPIM0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_BRIDGES_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_BRIDGES_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_BRIDGES_HPS_0_SPIM1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_BRIDGES_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_BRIDGES_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_BRIDGES_HPS_0_TIMER_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_BRIDGES_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_BRIDGES_HPS_0_L2_BASE 0xfffef000
#define HPS_0_BRIDGES_HPS_0_L2_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_BASE 0xc0000000
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_END 0xc000ffff
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'pio_led', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PIO_LED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PIO_LED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PIO_LED_COMPONENT_NAME pio_led
#define HPS_0_ARM_A9_0_PIO_LED_BASE 0xc0010000
#define HPS_0_ARM_A9_0_PIO_LED_SPAN 16
#define HPS_0_ARM_A9_0_PIO_LED_END 0xc001000f
#define HPS_0_ARM_A9_0_PIO_LED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PIO_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PIO_LED_CAPTURE 0
#define HPS_0_ARM_A9_0_PIO_LED_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_PIO_LED_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PIO_LED_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PIO_LED_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PIO_LED_FREQ 50000000
#define HPS_0_ARM_A9_0_PIO_LED_HAS_IN 0
#define HPS_0_ARM_A9_0_PIO_LED_HAS_OUT 1
#define HPS_0_ARM_A9_0_PIO_LED_HAS_TRI 0
#define HPS_0_ARM_A9_0_PIO_LED_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PIO_LED_RESET_VALUE 255

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_BASE 0xc0020000
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_SPAN 65536
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_END 0xc002ffff
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_WRITABLE 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'testOut', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TESTOUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TESTOUT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TESTOUT_COMPONENT_NAME testOut
#define HPS_0_ARM_A9_0_TESTOUT_BASE 0xff200000
#define HPS_0_ARM_A9_0_TESTOUT_SPAN 16
#define HPS_0_ARM_A9_0_TESTOUT_END 0xff20000f
#define HPS_0_ARM_A9_0_TESTOUT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TESTOUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TESTOUT_CAPTURE 0
#define HPS_0_ARM_A9_0_TESTOUT_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_TESTOUT_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TESTOUT_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TESTOUT_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TESTOUT_FREQ 50000000
#define HPS_0_ARM_A9_0_TESTOUT_HAS_IN 1
#define HPS_0_ARM_A9_0_TESTOUT_HAS_OUT 0
#define HPS_0_ARM_A9_0_TESTOUT_HAS_TRI 0
#define HPS_0_ARM_A9_0_TESTOUT_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TESTOUT_RESET_VALUE 0

/*
 * Macros for device 'pio_reg1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PIO_REG1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PIO_REG1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PIO_REG1_COMPONENT_NAME pio_reg1
#define HPS_0_ARM_A9_0_PIO_REG1_BASE 0xff200010
#define HPS_0_ARM_A9_0_PIO_REG1_SPAN 16
#define HPS_0_ARM_A9_0_PIO_REG1_END 0xff20001f
#define HPS_0_ARM_A9_0_PIO_REG1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PIO_REG1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PIO_REG1_CAPTURE 0
#define HPS_0_ARM_A9_0_PIO_REG1_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_PIO_REG1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PIO_REG1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PIO_REG1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PIO_REG1_FREQ 50000000
#define HPS_0_ARM_A9_0_PIO_REG1_HAS_IN 0
#define HPS_0_ARM_A9_0_PIO_REG1_HAS_OUT 1
#define HPS_0_ARM_A9_0_PIO_REG1_HAS_TRI 0
#define HPS_0_ARM_A9_0_PIO_REG1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PIO_REG1_RESET_VALUE 255

/*
 * Macros for device 'pio_reg2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PIO_REG2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PIO_REG2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PIO_REG2_COMPONENT_NAME pio_reg2
#define HPS_0_ARM_A9_0_PIO_REG2_BASE 0xff200020
#define HPS_0_ARM_A9_0_PIO_REG2_SPAN 16
#define HPS_0_ARM_A9_0_PIO_REG2_END 0xff20002f
#define HPS_0_ARM_A9_0_PIO_REG2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PIO_REG2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PIO_REG2_CAPTURE 0
#define HPS_0_ARM_A9_0_PIO_REG2_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_PIO_REG2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PIO_REG2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PIO_REG2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PIO_REG2_FREQ 50000000
#define HPS_0_ARM_A9_0_PIO_REG2_HAS_IN 0
#define HPS_0_ARM_A9_0_PIO_REG2_HAS_OUT 1
#define HPS_0_ARM_A9_0_PIO_REG2_HAS_TRI 0
#define HPS_0_ARM_A9_0_PIO_REG2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PIO_REG2_RESET_VALUE 255

/*
 * Macros for device 'pio_reg3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PIO_REG3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PIO_REG3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PIO_REG3_COMPONENT_NAME pio_reg3
#define HPS_0_ARM_A9_0_PIO_REG3_BASE 0xff200030
#define HPS_0_ARM_A9_0_PIO_REG3_SPAN 16
#define HPS_0_ARM_A9_0_PIO_REG3_END 0xff20003f
#define HPS_0_ARM_A9_0_PIO_REG3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PIO_REG3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PIO_REG3_CAPTURE 0
#define HPS_0_ARM_A9_0_PIO_REG3_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_PIO_REG3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PIO_REG3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PIO_REG3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PIO_REG3_FREQ 50000000
#define HPS_0_ARM_A9_0_PIO_REG3_HAS_IN 1
#define HPS_0_ARM_A9_0_PIO_REG3_HAS_OUT 0
#define HPS_0_ARM_A9_0_PIO_REG3_HAS_TRI 0
#define HPS_0_ARM_A9_0_PIO_REG3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PIO_REG3_RESET_VALUE 0

/*
 * Macros for device 'MemoryDMA', class 'altera_avalon_sgdma'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_COMPONENT_TYPE altera_avalon_sgdma
#define HPS_0_ARM_A9_0_MEMORYDMA_COMPONENT_NAME MemoryDMA
#define HPS_0_ARM_A9_0_MEMORYDMA_BASE 0xff200040
#define HPS_0_ARM_A9_0_MEMORYDMA_SPAN 64
#define HPS_0_ARM_A9_0_MEMORYDMA_END 0xff20007f
#define HPS_0_ARM_A9_0_MEMORYDMA_ADDRESS_WIDTH 32
#define HPS_0_ARM_A9_0_MEMORYDMA_ALWAYS_DO_MAX_BURST 1
#define HPS_0_ARM_A9_0_MEMORYDMA_ATLANTIC_CHANNEL_DATA_WIDTH 4
#define HPS_0_ARM_A9_0_MEMORYDMA_AVALON_MM_BYTE_REORDER_MODE 0
#define HPS_0_ARM_A9_0_MEMORYDMA_BURST_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_MEMORYDMA_BURST_TRANSFER 0
#define HPS_0_ARM_A9_0_MEMORYDMA_BYTES_TO_TRANSFER_DATA_WIDTH 16
#define HPS_0_ARM_A9_0_MEMORYDMA_CHAIN_WRITEBACK_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_MEMORYDMA_COMMAND_FIFO_DATA_WIDTH 104
#define HPS_0_ARM_A9_0_MEMORYDMA_CONTROL_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_MEMORYDMA_CONTROL_SLAVE_ADDRESS_WIDTH 4
#define HPS_0_ARM_A9_0_MEMORYDMA_CONTROL_SLAVE_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_MEMORYDMA_DESCRIPTOR_READ_BURST 0
#define HPS_0_ARM_A9_0_MEMORYDMA_DESC_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_MEMORYDMA_HAS_READ_BLOCK 1
#define HPS_0_ARM_A9_0_MEMORYDMA_HAS_WRITE_BLOCK 1
#define HPS_0_ARM_A9_0_MEMORYDMA_IN_ERROR_WIDTH 0
#define HPS_0_ARM_A9_0_MEMORYDMA_OUT_ERROR_WIDTH 0
#define HPS_0_ARM_A9_0_MEMORYDMA_READ_BLOCK_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_MEMORYDMA_READ_BURSTCOUNT_WIDTH 4
#define HPS_0_ARM_A9_0_MEMORYDMA_STATUS_TOKEN_DATA_WIDTH 24
#define HPS_0_ARM_A9_0_MEMORYDMA_STREAM_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_MEMORYDMA_UNALIGNED_TRANSFER 0
#define HPS_0_ARM_A9_0_MEMORYDMA_WRITE_BLOCK_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_MEMORYDMA_WRITE_BURSTCOUNT_WIDTH 4

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GMAC0_SPAN 8192
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GMAC1_SPAN 8192
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SDMMC_SPAN 4096
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_QSPI_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_QSPI_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO0_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO1_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO2_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_L3REGS_SPAN 4096
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_NAND0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_NAND0_SPAN 65536
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_USB0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_USB0_SPAN 262144
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_USB1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_USB1_SPAN 262144
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DCAN0_SPAN 4096
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DCAN1_SPAN 4096
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART0_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART0_END 0xffc020ff
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART1_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART1_END 0xffc030ff
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C0_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C1_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C2_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C2_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C3_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C3_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER0_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER1_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER2_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER3_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_RSTMGR_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DMA_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DMA_SPAN 4096
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SPIM0_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SPIM1_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER_SPAN 256
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_L2_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_L2_BASE 0xfffef000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_L2_SPAN 4096
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_write
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_BASE 0x20000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SPAN 65536
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_END 0x2ffff
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_WRITABLE 1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   MemoryDMA_m_write
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_COMPONENT_NAME myBus
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_BASE 0x30000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_SPAN 16
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_END 0x3000f
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_CAPTURE 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_FREQ 2000000
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_HAS_IN 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_HAS_OUT 1
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_HAS_TRI 0
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_MEMORYDMA_M_WRITE_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'dma_0', class 'altera_avalon_dma'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_DMA_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_DMA_0_COMPONENT_TYPE altera_avalon_dma
#define HPS_0_ARM_A9_0_DMA_0_COMPONENT_NAME dma_0
#define HPS_0_ARM_A9_0_DMA_0_BASE 0xff200080
#define HPS_0_ARM_A9_0_DMA_0_SPAN 32
#define HPS_0_ARM_A9_0_DMA_0_END 0xff20009f
#define HPS_0_ARM_A9_0_DMA_0_ALLOW_BYTE_TRANSACTIONS 1
#define HPS_0_ARM_A9_0_DMA_0_ALLOW_DOUBLEWORD_TRANSACTIONS 1
#define HPS_0_ARM_A9_0_DMA_0_ALLOW_HW_TRANSACTIONS 1
#define HPS_0_ARM_A9_0_DMA_0_ALLOW_QUADWORD_TRANSACTIONS 1
#define HPS_0_ARM_A9_0_DMA_0_ALLOW_WORD_TRANSACTIONS 1
#define HPS_0_ARM_A9_0_DMA_0_LENGTHWIDTH 13
#define HPS_0_ARM_A9_0_DMA_0_MAX_BURST_SIZE 128

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   dma_0_read_master
 * The macros are prefixed with 'HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_BASE 0x0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_END 0xffff
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   dma_0_read_master
 * The macros are prefixed with 'HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_BASE 0x20000
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SPAN 65536
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_END 0x2ffff
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_WRITABLE 1
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   dma_0_read_master
 * The macros are prefixed with 'HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_COMPONENT_NAME myBus
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_BASE 0x30000
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_SPAN 16
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_END 0x3000f
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_CAPTURE 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_FREQ 2000000
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_HAS_IN 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_HAS_OUT 1
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_HAS_TRI 0
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_DMA_0_READ_MASTER_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   dma_0_write_master
 * The macros are prefixed with 'HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_BASE 0x0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_END 0xffff
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   dma_0_write_master
 * The macros are prefixed with 'HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_BASE 0x20000
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SPAN 65536
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_END 0x2ffff
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_WRITABLE 1
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_0
 *   dma_0_write_master
 * The macros are prefixed with 'HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_COMPONENT_NAME myBus
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_BASE 0x30000
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_SPAN 16
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_END 0x3000f
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_CAPTURE 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_FREQ 2000000
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_HAS_IN 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_HAS_OUT 1
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_HAS_TRI 0
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_DMA_0_WRITE_MASTER_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_ARM_A9_0_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_ARM_A9_0_SYSID_QSYS_BASE 0xff210000
#define HPS_0_ARM_A9_0_SYSID_QSYS_SPAN 8
#define HPS_0_ARM_A9_0_SYSID_QSYS_END 0xff210007
#define HPS_0_ARM_A9_0_SYSID_QSYS_ID 2899645186
#define HPS_0_ARM_A9_0_SYSID_QSYS_TIMESTAMP 1710588038

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_ARM_A9_0_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_ARM_A9_0_JTAG_UART_BASE 0xff220000
#define HPS_0_ARM_A9_0_JTAG_UART_SPAN 8
#define HPS_0_ARM_A9_0_JTAG_UART_END 0xff220007
#define HPS_0_ARM_A9_0_JTAG_UART_READ_DEPTH 64
#define HPS_0_ARM_A9_0_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_ARM_A9_0_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_ARM_A9_0_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_MYBUS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_MYBUS_COMPONENT_NAME myBus
#define HPS_0_ARM_A9_0_MYBUS_BASE 0xff230000
#define HPS_0_ARM_A9_0_MYBUS_SPAN 16
#define HPS_0_ARM_A9_0_MYBUS_END 0xff23000f
#define HPS_0_ARM_A9_0_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_MYBUS_CAPTURE 0
#define HPS_0_ARM_A9_0_MYBUS_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_MYBUS_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_MYBUS_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_MYBUS_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_MYBUS_FREQ 2000000
#define HPS_0_ARM_A9_0_MYBUS_HAS_IN 0
#define HPS_0_ARM_A9_0_MYBUS_HAS_OUT 1
#define HPS_0_ARM_A9_0_MYBUS_HAS_TRI 0
#define HPS_0_ARM_A9_0_MYBUS_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'test', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TEST_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TEST_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TEST_COMPONENT_NAME test
#define HPS_0_ARM_A9_0_TEST_BASE 0xff240000
#define HPS_0_ARM_A9_0_TEST_SPAN 16
#define HPS_0_ARM_A9_0_TEST_END 0xff24000f
#define HPS_0_ARM_A9_0_TEST_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TEST_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TEST_CAPTURE 0
#define HPS_0_ARM_A9_0_TEST_DATA_WIDTH 8
#define HPS_0_ARM_A9_0_TEST_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TEST_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TEST_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TEST_FREQ 50000000
#define HPS_0_ARM_A9_0_TEST_HAS_IN 0
#define HPS_0_ARM_A9_0_TEST_HAS_OUT 1
#define HPS_0_ARM_A9_0_TEST_HAS_TRI 0
#define HPS_0_ARM_A9_0_TEST_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TEST_RESET_VALUE 255

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_SPAN 8192
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_SPAN 8192
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_ARM_A9_0_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_ARM_A9_0_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_ARM_A9_0_HPS_0_QSPI_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_ARM_A9_0_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_ARM_A9_0_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_ARM_A9_0_HPS_0_NAND0_SPAN 65536
#define HPS_0_ARM_A9_0_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_0_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_ARM_A9_0_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_ARM_A9_0_HPS_0_USB0_SPAN 262144
#define HPS_0_ARM_A9_0_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_0_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_ARM_A9_0_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_ARM_A9_0_HPS_0_USB1_SPAN 262144
#define HPS_0_ARM_A9_0_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_0_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_ARM_A9_0_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_ARM_A9_0_HPS_0_UART0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_UART0_END 0xffc020ff
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_0_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_ARM_A9_0_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_ARM_A9_0_HPS_0_UART1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_UART1_END 0xffc030ff
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_ARM_A9_0_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_ARM_A9_0_HPS_0_I2C0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_ARM_A9_0_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_ARM_A9_0_HPS_0_I2C1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_ARM_A9_0_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_ARM_A9_0_HPS_0_I2C2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_ARM_A9_0_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_ARM_A9_0_HPS_0_I2C3_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_wd_timer0', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_COMPONENT_NAME hps_0_wd_timer0
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_BASE 0xffd02000
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_END 0xffd020ff

/*
 * Macros for device 'hps_0_wd_timer1', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_COMPONENT_NAME hps_0_wd_timer1
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_BASE 0xffd03000
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_END 0xffd030ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_ARM_A9_0_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_ARM_A9_0_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_ARM_A9_0_HPS_0_DMA_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_scu', class 'scu'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SCU_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SCU_COMPONENT_TYPE scu
#define HPS_0_ARM_A9_0_HPS_0_SCU_COMPONENT_NAME hps_0_scu
#define HPS_0_ARM_A9_0_HPS_0_SCU_BASE 0xfffec000
#define HPS_0_ARM_A9_0_HPS_0_SCU_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SCU_END 0xfffec0ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_ARM_A9_0_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_ARM_A9_0_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_ARM_A9_0_HPS_0_TIMER_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_ARM_A9_0_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_ARM_A9_0_HPS_0_L2_BASE 0xfffef000
#define HPS_0_ARM_A9_0_HPS_0_L2_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_BASE 0xc0000000
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_END 0xc000ffff
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'pio_led', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PIO_LED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PIO_LED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PIO_LED_COMPONENT_NAME pio_led
#define HPS_0_ARM_A9_1_PIO_LED_BASE 0xc0010000
#define HPS_0_ARM_A9_1_PIO_LED_SPAN 16
#define HPS_0_ARM_A9_1_PIO_LED_END 0xc001000f
#define HPS_0_ARM_A9_1_PIO_LED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PIO_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PIO_LED_CAPTURE 0
#define HPS_0_ARM_A9_1_PIO_LED_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_PIO_LED_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PIO_LED_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PIO_LED_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PIO_LED_FREQ 50000000
#define HPS_0_ARM_A9_1_PIO_LED_HAS_IN 0
#define HPS_0_ARM_A9_1_PIO_LED_HAS_OUT 1
#define HPS_0_ARM_A9_1_PIO_LED_HAS_TRI 0
#define HPS_0_ARM_A9_1_PIO_LED_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PIO_LED_RESET_VALUE 255

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_BASE 0xc0020000
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_SPAN 65536
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_END 0xc002ffff
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_WRITABLE 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'testOut', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TESTOUT_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TESTOUT_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TESTOUT_COMPONENT_NAME testOut
#define HPS_0_ARM_A9_1_TESTOUT_BASE 0xff200000
#define HPS_0_ARM_A9_1_TESTOUT_SPAN 16
#define HPS_0_ARM_A9_1_TESTOUT_END 0xff20000f
#define HPS_0_ARM_A9_1_TESTOUT_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TESTOUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TESTOUT_CAPTURE 0
#define HPS_0_ARM_A9_1_TESTOUT_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_TESTOUT_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TESTOUT_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TESTOUT_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TESTOUT_FREQ 50000000
#define HPS_0_ARM_A9_1_TESTOUT_HAS_IN 1
#define HPS_0_ARM_A9_1_TESTOUT_HAS_OUT 0
#define HPS_0_ARM_A9_1_TESTOUT_HAS_TRI 0
#define HPS_0_ARM_A9_1_TESTOUT_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TESTOUT_RESET_VALUE 0

/*
 * Macros for device 'pio_reg1', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PIO_REG1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PIO_REG1_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PIO_REG1_COMPONENT_NAME pio_reg1
#define HPS_0_ARM_A9_1_PIO_REG1_BASE 0xff200010
#define HPS_0_ARM_A9_1_PIO_REG1_SPAN 16
#define HPS_0_ARM_A9_1_PIO_REG1_END 0xff20001f
#define HPS_0_ARM_A9_1_PIO_REG1_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PIO_REG1_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PIO_REG1_CAPTURE 0
#define HPS_0_ARM_A9_1_PIO_REG1_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_PIO_REG1_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PIO_REG1_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PIO_REG1_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PIO_REG1_FREQ 50000000
#define HPS_0_ARM_A9_1_PIO_REG1_HAS_IN 0
#define HPS_0_ARM_A9_1_PIO_REG1_HAS_OUT 1
#define HPS_0_ARM_A9_1_PIO_REG1_HAS_TRI 0
#define HPS_0_ARM_A9_1_PIO_REG1_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PIO_REG1_RESET_VALUE 255

/*
 * Macros for device 'pio_reg2', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PIO_REG2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PIO_REG2_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PIO_REG2_COMPONENT_NAME pio_reg2
#define HPS_0_ARM_A9_1_PIO_REG2_BASE 0xff200020
#define HPS_0_ARM_A9_1_PIO_REG2_SPAN 16
#define HPS_0_ARM_A9_1_PIO_REG2_END 0xff20002f
#define HPS_0_ARM_A9_1_PIO_REG2_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PIO_REG2_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PIO_REG2_CAPTURE 0
#define HPS_0_ARM_A9_1_PIO_REG2_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_PIO_REG2_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PIO_REG2_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PIO_REG2_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PIO_REG2_FREQ 50000000
#define HPS_0_ARM_A9_1_PIO_REG2_HAS_IN 0
#define HPS_0_ARM_A9_1_PIO_REG2_HAS_OUT 1
#define HPS_0_ARM_A9_1_PIO_REG2_HAS_TRI 0
#define HPS_0_ARM_A9_1_PIO_REG2_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PIO_REG2_RESET_VALUE 255

/*
 * Macros for device 'pio_reg3', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PIO_REG3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PIO_REG3_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PIO_REG3_COMPONENT_NAME pio_reg3
#define HPS_0_ARM_A9_1_PIO_REG3_BASE 0xff200030
#define HPS_0_ARM_A9_1_PIO_REG3_SPAN 16
#define HPS_0_ARM_A9_1_PIO_REG3_END 0xff20003f
#define HPS_0_ARM_A9_1_PIO_REG3_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PIO_REG3_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PIO_REG3_CAPTURE 0
#define HPS_0_ARM_A9_1_PIO_REG3_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_PIO_REG3_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PIO_REG3_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PIO_REG3_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PIO_REG3_FREQ 50000000
#define HPS_0_ARM_A9_1_PIO_REG3_HAS_IN 1
#define HPS_0_ARM_A9_1_PIO_REG3_HAS_OUT 0
#define HPS_0_ARM_A9_1_PIO_REG3_HAS_TRI 0
#define HPS_0_ARM_A9_1_PIO_REG3_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PIO_REG3_RESET_VALUE 0

/*
 * Macros for device 'MemoryDMA', class 'altera_avalon_sgdma'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_COMPONENT_TYPE altera_avalon_sgdma
#define HPS_0_ARM_A9_1_MEMORYDMA_COMPONENT_NAME MemoryDMA
#define HPS_0_ARM_A9_1_MEMORYDMA_BASE 0xff200040
#define HPS_0_ARM_A9_1_MEMORYDMA_SPAN 64
#define HPS_0_ARM_A9_1_MEMORYDMA_END 0xff20007f
#define HPS_0_ARM_A9_1_MEMORYDMA_ADDRESS_WIDTH 32
#define HPS_0_ARM_A9_1_MEMORYDMA_ALWAYS_DO_MAX_BURST 1
#define HPS_0_ARM_A9_1_MEMORYDMA_ATLANTIC_CHANNEL_DATA_WIDTH 4
#define HPS_0_ARM_A9_1_MEMORYDMA_AVALON_MM_BYTE_REORDER_MODE 0
#define HPS_0_ARM_A9_1_MEMORYDMA_BURST_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_MEMORYDMA_BURST_TRANSFER 0
#define HPS_0_ARM_A9_1_MEMORYDMA_BYTES_TO_TRANSFER_DATA_WIDTH 16
#define HPS_0_ARM_A9_1_MEMORYDMA_CHAIN_WRITEBACK_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_MEMORYDMA_COMMAND_FIFO_DATA_WIDTH 104
#define HPS_0_ARM_A9_1_MEMORYDMA_CONTROL_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_MEMORYDMA_CONTROL_SLAVE_ADDRESS_WIDTH 4
#define HPS_0_ARM_A9_1_MEMORYDMA_CONTROL_SLAVE_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_MEMORYDMA_DESCRIPTOR_READ_BURST 0
#define HPS_0_ARM_A9_1_MEMORYDMA_DESC_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_MEMORYDMA_HAS_READ_BLOCK 1
#define HPS_0_ARM_A9_1_MEMORYDMA_HAS_WRITE_BLOCK 1
#define HPS_0_ARM_A9_1_MEMORYDMA_IN_ERROR_WIDTH 0
#define HPS_0_ARM_A9_1_MEMORYDMA_OUT_ERROR_WIDTH 0
#define HPS_0_ARM_A9_1_MEMORYDMA_READ_BLOCK_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_MEMORYDMA_READ_BURSTCOUNT_WIDTH 4
#define HPS_0_ARM_A9_1_MEMORYDMA_STATUS_TOKEN_DATA_WIDTH 24
#define HPS_0_ARM_A9_1_MEMORYDMA_STREAM_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_MEMORYDMA_UNALIGNED_TRANSFER 0
#define HPS_0_ARM_A9_1_MEMORYDMA_WRITE_BLOCK_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_MEMORYDMA_WRITE_BURSTCOUNT_WIDTH 4

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GMAC0_SPAN 8192
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GMAC1_SPAN 8192
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SDMMC_SPAN 4096
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_QSPI_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_QSPI_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO0_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO1_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO2_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_L3REGS_SPAN 4096
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_NAND0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_NAND0_SPAN 65536
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_USB0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_USB0_SPAN 262144
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_USB1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_USB1_SPAN 262144
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DCAN0_SPAN 4096
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DCAN1_SPAN 4096
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART0_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART0_END 0xffc020ff
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART1_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART1_END 0xffc030ff
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C0_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C1_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C2_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C2_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C3_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C3_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER0_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER1_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER2_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER3_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_RSTMGR_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DMA_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DMA_SPAN 4096
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SPIM0_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SPIM1_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER_SPAN 256
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_L2_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_L2_BASE 0xfffef000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_L2_SPAN 4096
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_read
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_READ_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_write
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_BASE 0x20000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SPAN 65536
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_END 0x2ffff
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_WRITABLE 1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   MemoryDMA_m_write
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_COMPONENT_NAME myBus
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_BASE 0x30000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_SPAN 16
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_END 0x3000f
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_CAPTURE 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_FREQ 2000000
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_HAS_IN 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_HAS_OUT 1
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_HAS_TRI 0
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_MEMORYDMA_M_WRITE_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'dma_0', class 'altera_avalon_dma'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_DMA_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_DMA_0_COMPONENT_TYPE altera_avalon_dma
#define HPS_0_ARM_A9_1_DMA_0_COMPONENT_NAME dma_0
#define HPS_0_ARM_A9_1_DMA_0_BASE 0xff200080
#define HPS_0_ARM_A9_1_DMA_0_SPAN 32
#define HPS_0_ARM_A9_1_DMA_0_END 0xff20009f
#define HPS_0_ARM_A9_1_DMA_0_ALLOW_BYTE_TRANSACTIONS 1
#define HPS_0_ARM_A9_1_DMA_0_ALLOW_DOUBLEWORD_TRANSACTIONS 1
#define HPS_0_ARM_A9_1_DMA_0_ALLOW_HW_TRANSACTIONS 1
#define HPS_0_ARM_A9_1_DMA_0_ALLOW_QUADWORD_TRANSACTIONS 1
#define HPS_0_ARM_A9_1_DMA_0_ALLOW_WORD_TRANSACTIONS 1
#define HPS_0_ARM_A9_1_DMA_0_LENGTHWIDTH 13
#define HPS_0_ARM_A9_1_DMA_0_MAX_BURST_SIZE 128

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   dma_0_read_master
 * The macros are prefixed with 'HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_BASE 0x0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_END 0xffff
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   dma_0_read_master
 * The macros are prefixed with 'HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_BASE 0x20000
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SPAN 65536
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_END 0x2ffff
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_WRITABLE 1
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   dma_0_read_master
 * The macros are prefixed with 'HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_COMPONENT_NAME myBus
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_BASE 0x30000
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_SPAN 16
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_END 0x3000f
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_CAPTURE 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_FREQ 2000000
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_HAS_IN 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_HAS_OUT 1
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_HAS_TRI 0
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_DMA_0_READ_MASTER_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   dma_0_write_master
 * The macros are prefixed with 'HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_BASE 0x0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_END 0xffff
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'onchip_memory2_1', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   dma_0_write_master
 * The macros are prefixed with 'HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_COMPONENT_NAME onchip_memory2_1
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_BASE 0x20000
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SPAN 65536
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_END 0x2ffff
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_CONTENTS_INFO ""
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_DUAL_PORT 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_INIT_CONTENTS_FILE soc_system_onchip_memory2_1
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_INSTANCE_ID NONE
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_SIZE_VALUE 65536
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_WRITABLE 1
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_ONCHIP_MEMORY2_1_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_1

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the following master groups (in order):
 *   hps_0_arm_a9_1
 *   dma_0_write_master
 * The macros are prefixed with 'HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_'.
 * The prefix is the master group descriptor path and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_COMPONENT_NAME myBus
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_BASE 0x30000
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_SPAN 16
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_END 0x3000f
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_CAPTURE 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_FREQ 2000000
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_HAS_IN 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_HAS_OUT 1
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_HAS_TRI 0
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_DMA_0_WRITE_MASTER_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_ARM_A9_1_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_ARM_A9_1_SYSID_QSYS_BASE 0xff210000
#define HPS_0_ARM_A9_1_SYSID_QSYS_SPAN 8
#define HPS_0_ARM_A9_1_SYSID_QSYS_END 0xff210007
#define HPS_0_ARM_A9_1_SYSID_QSYS_ID 2899645186
#define HPS_0_ARM_A9_1_SYSID_QSYS_TIMESTAMP 1710588038

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_ARM_A9_1_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_ARM_A9_1_JTAG_UART_BASE 0xff220000
#define HPS_0_ARM_A9_1_JTAG_UART_SPAN 8
#define HPS_0_ARM_A9_1_JTAG_UART_END 0xff220007
#define HPS_0_ARM_A9_1_JTAG_UART_READ_DEPTH 64
#define HPS_0_ARM_A9_1_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_ARM_A9_1_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_ARM_A9_1_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_MYBUS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_MYBUS_COMPONENT_NAME myBus
#define HPS_0_ARM_A9_1_MYBUS_BASE 0xff230000
#define HPS_0_ARM_A9_1_MYBUS_SPAN 16
#define HPS_0_ARM_A9_1_MYBUS_END 0xff23000f
#define HPS_0_ARM_A9_1_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_MYBUS_CAPTURE 0
#define HPS_0_ARM_A9_1_MYBUS_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_MYBUS_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_MYBUS_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_MYBUS_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_MYBUS_FREQ 2000000
#define HPS_0_ARM_A9_1_MYBUS_HAS_IN 0
#define HPS_0_ARM_A9_1_MYBUS_HAS_OUT 1
#define HPS_0_ARM_A9_1_MYBUS_HAS_TRI 0
#define HPS_0_ARM_A9_1_MYBUS_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_MYBUS_RESET_VALUE 0

/*
 * Macros for device 'test', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TEST_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TEST_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TEST_COMPONENT_NAME test
#define HPS_0_ARM_A9_1_TEST_BASE 0xff240000
#define HPS_0_ARM_A9_1_TEST_SPAN 16
#define HPS_0_ARM_A9_1_TEST_END 0xff24000f
#define HPS_0_ARM_A9_1_TEST_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TEST_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TEST_CAPTURE 0
#define HPS_0_ARM_A9_1_TEST_DATA_WIDTH 8
#define HPS_0_ARM_A9_1_TEST_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TEST_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TEST_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TEST_FREQ 50000000
#define HPS_0_ARM_A9_1_TEST_HAS_IN 0
#define HPS_0_ARM_A9_1_TEST_HAS_OUT 1
#define HPS_0_ARM_A9_1_TEST_HAS_TRI 0
#define HPS_0_ARM_A9_1_TEST_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TEST_RESET_VALUE 255

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_SPAN 8192
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_SPAN 8192
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_ARM_A9_1_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_ARM_A9_1_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_ARM_A9_1_HPS_0_QSPI_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_ARM_A9_1_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_ARM_A9_1_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_ARM_A9_1_HPS_0_NAND0_SPAN 65536
#define HPS_0_ARM_A9_1_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_1_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_ARM_A9_1_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_ARM_A9_1_HPS_0_USB0_SPAN 262144
#define HPS_0_ARM_A9_1_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_1_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_ARM_A9_1_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_ARM_A9_1_HPS_0_USB1_SPAN 262144
#define HPS_0_ARM_A9_1_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_1_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_ARM_A9_1_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_ARM_A9_1_HPS_0_UART0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_UART0_END 0xffc020ff
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_1_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_ARM_A9_1_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_ARM_A9_1_HPS_0_UART1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_UART1_END 0xffc030ff
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_ARM_A9_1_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_ARM_A9_1_HPS_0_I2C0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_ARM_A9_1_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_ARM_A9_1_HPS_0_I2C1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_ARM_A9_1_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_ARM_A9_1_HPS_0_I2C2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_ARM_A9_1_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_ARM_A9_1_HPS_0_I2C3_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_wd_timer0', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_COMPONENT_NAME hps_0_wd_timer0
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_BASE 0xffd02000
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_END 0xffd020ff

/*
 * Macros for device 'hps_0_wd_timer1', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_COMPONENT_NAME hps_0_wd_timer1
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_BASE 0xffd03000
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_END 0xffd030ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_ARM_A9_1_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_ARM_A9_1_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_ARM_A9_1_HPS_0_DMA_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_scu', class 'scu'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SCU_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SCU_COMPONENT_TYPE scu
#define HPS_0_ARM_A9_1_HPS_0_SCU_COMPONENT_NAME hps_0_scu
#define HPS_0_ARM_A9_1_HPS_0_SCU_BASE 0xfffec000
#define HPS_0_ARM_A9_1_HPS_0_SCU_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SCU_END 0xfffec0ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_ARM_A9_1_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_ARM_A9_1_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_ARM_A9_1_HPS_0_TIMER_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_ARM_A9_1_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_ARM_A9_1_HPS_0_L2_BASE 0xfffef000
#define HPS_0_ARM_A9_1_HPS_0_L2_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_ONLY_MASTER_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_ONLY_MASTER_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_ONLY_MASTER_HPS_0_GMAC0_BASE 0xff700000
#define HPS_ONLY_MASTER_HPS_0_GMAC0_SPAN 8192
#define HPS_ONLY_MASTER_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_ONLY_MASTER_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_ONLY_MASTER_HPS_0_GMAC1_BASE 0xff702000
#define HPS_ONLY_MASTER_HPS_0_GMAC1_SPAN 8192
#define HPS_ONLY_MASTER_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_ONLY_MASTER_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_ONLY_MASTER_HPS_0_SDMMC_BASE 0xff704000
#define HPS_ONLY_MASTER_HPS_0_SDMMC_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_ONLY_MASTER_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_ONLY_MASTER_HPS_0_QSPI_BASE 0xff705000
#define HPS_ONLY_MASTER_HPS_0_QSPI_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_ONLY_MASTER_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_ONLY_MASTER_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_ONLY_MASTER_HPS_0_FPGAMGR_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_ONLY_MASTER_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_ONLY_MASTER_HPS_0_GPIO0_BASE 0xff708000
#define HPS_ONLY_MASTER_HPS_0_GPIO0_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_ONLY_MASTER_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_ONLY_MASTER_HPS_0_GPIO1_BASE 0xff709000
#define HPS_ONLY_MASTER_HPS_0_GPIO1_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_ONLY_MASTER_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_ONLY_MASTER_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_ONLY_MASTER_HPS_0_GPIO2_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_ONLY_MASTER_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_ONLY_MASTER_HPS_0_L3REGS_BASE 0xff800000
#define HPS_ONLY_MASTER_HPS_0_L3REGS_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_ONLY_MASTER_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_ONLY_MASTER_HPS_0_NAND0_BASE 0xff900000
#define HPS_ONLY_MASTER_HPS_0_NAND0_SPAN 65536
#define HPS_ONLY_MASTER_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_ONLY_MASTER_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_ONLY_MASTER_HPS_0_USB0_BASE 0xffb00000
#define HPS_ONLY_MASTER_HPS_0_USB0_SPAN 262144
#define HPS_ONLY_MASTER_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_ONLY_MASTER_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_ONLY_MASTER_HPS_0_USB1_BASE 0xffb40000
#define HPS_ONLY_MASTER_HPS_0_USB1_SPAN 262144
#define HPS_ONLY_MASTER_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_ONLY_MASTER_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_ONLY_MASTER_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_ONLY_MASTER_HPS_0_DCAN0_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_ONLY_MASTER_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_ONLY_MASTER_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_ONLY_MASTER_HPS_0_DCAN1_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_ONLY_MASTER_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_ONLY_MASTER_HPS_0_UART0_BASE 0xffc02000
#define HPS_ONLY_MASTER_HPS_0_UART0_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_UART0_END 0xffc020ff
#define HPS_ONLY_MASTER_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_ONLY_MASTER_HPS_0_UART0_FIFO_HWFC 0
#define HPS_ONLY_MASTER_HPS_0_UART0_FIFO_MODE 1
#define HPS_ONLY_MASTER_HPS_0_UART0_FIFO_SWFC 0
#define HPS_ONLY_MASTER_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_ONLY_MASTER_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_ONLY_MASTER_HPS_0_UART1_BASE 0xffc03000
#define HPS_ONLY_MASTER_HPS_0_UART1_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_UART1_END 0xffc030ff
#define HPS_ONLY_MASTER_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_ONLY_MASTER_HPS_0_UART1_FIFO_HWFC 0
#define HPS_ONLY_MASTER_HPS_0_UART1_FIFO_MODE 1
#define HPS_ONLY_MASTER_HPS_0_UART1_FIFO_SWFC 0
#define HPS_ONLY_MASTER_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_ONLY_MASTER_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_ONLY_MASTER_HPS_0_I2C0_BASE 0xffc04000
#define HPS_ONLY_MASTER_HPS_0_I2C0_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_ONLY_MASTER_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_ONLY_MASTER_HPS_0_I2C1_BASE 0xffc05000
#define HPS_ONLY_MASTER_HPS_0_I2C1_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_ONLY_MASTER_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_ONLY_MASTER_HPS_0_I2C2_BASE 0xffc06000
#define HPS_ONLY_MASTER_HPS_0_I2C2_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_ONLY_MASTER_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_ONLY_MASTER_HPS_0_I2C3_BASE 0xffc07000
#define HPS_ONLY_MASTER_HPS_0_I2C3_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_ONLY_MASTER_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_ONLY_MASTER_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_ONLY_MASTER_HPS_0_TIMER0_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_ONLY_MASTER_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_ONLY_MASTER_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_ONLY_MASTER_HPS_0_TIMER1_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_ONLY_MASTER_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_ONLY_MASTER_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_ONLY_MASTER_HPS_0_SDRCTL_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_ONLY_MASTER_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_ONLY_MASTER_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_ONLY_MASTER_HPS_0_TIMER2_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_ONLY_MASTER_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_ONLY_MASTER_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_ONLY_MASTER_HPS_0_TIMER3_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_ONLY_MASTER_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_ONLY_MASTER_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_ONLY_MASTER_HPS_0_CLKMGR_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_ONLY_MASTER_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_ONLY_MASTER_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_ONLY_MASTER_HPS_0_RSTMGR_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_ONLY_MASTER_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_ONLY_MASTER_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_ONLY_MASTER_HPS_0_SYSMGR_SPAN 1024
#define HPS_ONLY_MASTER_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_ONLY_MASTER_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_ONLY_MASTER_HPS_0_DMA_BASE 0xffe01000
#define HPS_ONLY_MASTER_HPS_0_DMA_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_ONLY_MASTER_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_ONLY_MASTER_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_ONLY_MASTER_HPS_0_SPIM0_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_ONLY_MASTER_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_ONLY_MASTER_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_ONLY_MASTER_HPS_0_SPIM1_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_ONLY_MASTER_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_ONLY_MASTER_HPS_0_TIMER_BASE 0xfffec600
#define HPS_ONLY_MASTER_HPS_0_TIMER_SPAN 256
#define HPS_ONLY_MASTER_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_ONLY_MASTER_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_ONLY_MASTER_HPS_0_L2_BASE 0xfffef000
#define HPS_ONLY_MASTER_HPS_0_L2_SPAN 4096
#define HPS_ONLY_MASTER_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_only_master'.
 * The macros are prefixed with 'HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_ONLY_MASTER_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'myBus', class 'altera_avalon_pio'
 * Path to the device is from the master group 'mm_clock_crossing_bridge_0'.
 * The macros are prefixed with 'MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_COMPONENT_TYPE altera_avalon_pio
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_COMPONENT_NAME myBus
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_BASE 0x0
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_SPAN 16
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_END 0xf
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_BIT_CLEARING_EDGE_REGISTER 0
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_CAPTURE 0
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_DATA_WIDTH 8
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_DO_TEST_BENCH_WIRING 0
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_DRIVEN_SIM_VALUE 0
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_EDGE_TYPE NONE
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_FREQ 2000000
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_HAS_IN 0
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_HAS_OUT 1
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_HAS_TRI 0
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_IRQ_TYPE NONE
#define MM_CLOCK_CROSSING_BRIDGE_0_MYBUS_RESET_VALUE 0


#endif /* _ALTERA_SOC_SYSTEM_H_ */
